# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
#    linux:
#      imageName: 'ubuntu-latest'
#      python.version: '3.7'
#      python.architecture: 'x64'
#    mac:
#      imageName: 'macos-10.13'
#      python.version: '3.7'
#      python.architecture: 'x64'
    windows:
      imageName: 'vs2017-win2016'
      python.version: '3.7'
      python.architecture: 'x86'

pool:
  vmImage: $(imageName)

variables:
  GOARCH: '386'
  CGO_ENABLED: '1'
  CGO_CFLAGS: '-g -O2 -m32'
  CFLAGS: '-m32'
  
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: '$(python.architecture)'
  displayName: 'Use Python $(python.version) - $(python.architecture)'

- script: |
    set
    go env
  displayName: 'Show env'

- script: |
    python -m pip install --upgrade pip setuptools
    python -m pip install wheel
  displayName: 'Install dependencies'

- script: |
    set MSYSTEM=MINGW32
    python setup.py sdist bdist_wheel
  displayName: 'Build wheels'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'artifact_$(Agent.OS)_$(Agent.JobName)_$(python.architecture)'
    targetPath: 'dist'

#- script: |
#    pip install pytest pytest-azurepipelines
#    pytest
#  displayName: 'pytest'
